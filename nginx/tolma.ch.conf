# the upstream component nginx needs to connect to
upstream django {
     server app:7000; # for a web port socket (we'll use this first)
    }

upstream ws {
    server app:8000;
}

# configuration of the server
server {
    # the port your site will be served on
    listen      80;
    # the domain name it will serve for
    server_name dev.tolma.ch; # substitute your machine's IP address or FQDN
    charset     utf-8;

    # max upload size
    client_max_body_size 75M;   # adjust to taste

    location /ws/ {
        proxy_pass http://ws;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_redirect     off;
            proxy_set_header   Host $http_host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
    }

    location /media/avatar {
        alias /var/www/tolma.ch/media/avatar;  # your Django project's media files - amend as required
        try_files $uri /media/avatar/default.png;
    }

    # Django media
    location /media  {
        alias /var/www/tolma.ch/media;  # your Django project's media files - amend as required
    }

    location = /projects/ {
        return 301 /projects/my/;
    }

    location ~* ^/static/.+\.(less|ttf|jpg|jpeg|gif|png|svg|js|css|woff|ico) {
        root /var/www/tolma.ch;
    }

    # Finally, send all non-media requests to the Django server.
    location / {
#    auth_basic "Closed";
#    auth_basic_user_file htpasswd;
        proxy_pass  http://django;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host 'dev.tolma.ch';
        proxy_redirect off;
    }
}