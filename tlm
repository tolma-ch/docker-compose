#!/usr/bin/env bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

CMD="${0##*/}"

usage()
{
    cat << USAGE >&2
Usage:
    $CMD host:port [-s] [-t timeout] [-- command args]
    -h HOST | --host=HOST       Host or IP under test
    -p PORT | --port=PORT       TCP port under test
                                Alternatively, you specify the host and port as host:port
    -s | --strict               Only execute subcommand if the test succeeds
    -q | --quiet                Don't output any status messages
    -t TIMEOUT | --timeout=TIMEOUT
                                Timeout in seconds, zero for no timeout
    -- COMMAND ARGS             Execute command with args after the test finishes
USAGE
    exit 1
}

start()
{
  docker-compose up -d --build --remove-orphans
}

rebuild()
{
  docker-compose up -d --build --force-recreate --remove-orphans $1
}

stop()
{
  docker-compose stop
}

run()
{
#  echo "$@"
  docker-compose run --rm app "$@"
}

while [ -n "$1" ]
do
  case "$1" in
    start) start ;;
    stop) stop ;;
    run) run "${@:2}" ;;
    rebuild) rebuild $2 ;;
    -h) usage
    break ;;
  esac
  shift
done