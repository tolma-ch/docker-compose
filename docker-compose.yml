version: '2.1'

services:
  db:
    image: mariadb:10.4
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci --max_allowed_packet=536870912 --wait_timeout=3600
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_RANDOM_ROOT_PASSWORD=yes
    healthcheck:
      test: "/usr/local/bin/healthcheck.sh --connect"
      interval: 1s
      retries: 120
    ports:
      - "127.0.0.1:3306:3306"
    networks:
      - my-network-name

  elastic:
    image: elasticsearch:2.4.6-alpine
    depends_on:
      - db
    networks:
      - my-network-name

  redis:
    image: redis
    networks:
      - my-network-name

  app:
    build: ../django
    volumes:
      - ../django:/var/www/tolma.ch
      - ./volumes/logs:/var/log/tolma.ch
      - ./volumes/docs:/var/www/tolmach_documents
      - ./volumes/static:/var/www/tolma.ch/static
      - ./volumes/media:/var/www/tolma.ch/media
    environment:
      - ES_HOST=elastic
      - REDIS_HOST=redis
      - MYSQL_HOST=db
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - SPARKPOST_API_KEY=${SPARKPOST_API_KEY}
      - DEBUG=${DEBUG}
      - PROD=${PROD}
      - PORT=${PORT}
      - DOMAIN=${DOMAIN}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - my-network-name

  caddy:
    image: caddy:2.1.1-alpine
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./volumes/logs:/var/log/tolma.ch
      - ./volumes/static:/var/www/tolma.ch/static
      - ./volumes/media:/var/www/tolma.ch/media
    environment:
      - PORT=${PORT}
      - DOMAIN=${DOMAIN}
    ports:
      - 80:80
      - 443:443
    depends_on:
      - app
    networks:
      - my-network-name

  lt:
    image: silviof/docker-languagetool
    networks:
      - my-network-name

networks:
  my-network-name:
    driver: bridge
